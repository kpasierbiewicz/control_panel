/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import arduino.Arduino;
import com.fazecast.jSerialComm.SerialPort;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author karro
 */
public class AdminWindow extends javax.swing.JFrame {
    
    static SerialPort chosenPortLocalization;
    static SerialPort chosenPortRobot;
    static SerialPort chosenPortData;
    static SerialPort[] portNames = SerialPort.getCommPorts();
    public String[] localization;
    public int index;
    private boolean turnOnRobot = false;
    
    // databaser driver
    private String jdbc_driver = "com.mysql.cj.jdbc.Driver";
        
    // database url
    private String db_url = "jdbc:mysql://127.0.0.1:3306/controlsystem?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";
       
       // database login
    private String username = "root";
       
       // database password
    private String password = "";
    
    public DefaultTableModel table;
    
    /**
     * Creates new form AdminWindow
     */
    public AdminWindow() {
        initComponents();
        
        try {
            // open connection to database
            Connection connection = DriverManager.getConnection(db_url, username, password);
            
            String sql = "SELECT name, surname, login, password, role FROM users";
            Statement statement = connection.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            table = (DefaultTableModel) this.jTable.getModel();
            while (rs.next()) {
                   table.addRow(new Object[]{rs.getString("name"), rs.getString("surname"), rs.getString("login"),
                rs.getString("password"), rs.getString("role")}); 
            }
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        userPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        surnameTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        loginTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        roleComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        addUserButton = new javax.swing.JButton();
        deleteUserButton = new javax.swing.JButton();
        editUserButton = new javax.swing.JButton();
        controlPanel = new javax.swing.JPanel();
        comPortButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        onCameraButton = new javax.swing.JButton();
        comPortComboBox = new javax.swing.JComboBox<>();
        responseDataComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        responseDataButton = new javax.swing.JButton();
        localizationComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        localizationButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        trackComboBox = new javax.swing.JComboBox<>();
        trackButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        testSensorButton = new javax.swing.JButton();
        OnOffButton = new javax.swing.JButton();
        refreshPortsButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel7.setText("Imię:");

        jLabel8.setText("Nazwisko:");

        jLabel9.setText("Login:");

        jLabel10.setText("Hasło:");

        jLabel11.setText("Rola:");

        roleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "admin", "user" }));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Imię", "Nazwisko", "Login", "Hasło", "Rola"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);

        addUserButton.setText("Dodaj");
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        deleteUserButton.setText("Usuń");
        deleteUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserButtonActionPerformed(evt);
            }
        });

        editUserButton.setText("Edytuj");
        editUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userPanelLayout = new javax.swing.GroupLayout(userPanel);
        userPanel.setLayout(userPanelLayout);
        userPanelLayout.setHorizontalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPanelLayout.createSequentialGroup()
                .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                    .addGroup(userPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(43, 43, 43)
                        .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameTextField)
                            .addComponent(surnameTextField)
                            .addComponent(loginTextField)
                            .addComponent(passwordTextField)
                            .addComponent(roleComboBox, 0, 161, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(addUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        userPanelLayout.setVerticalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userPanelLayout.createSequentialGroup()
                        .addComponent(addUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(userPanelLayout.createSequentialGroup()
                        .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(surnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(loginTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(roleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Manager użytkowników", userPanel);

        comPortButton.setText("Połącz");
        comPortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comPortButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Uruchom kamerę:");

        onCameraButton.setText("Włącz");
        onCameraButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCameraButtonActionPerformed(evt);
            }
        });

        comPortComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comPortComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Połączenie z robotem");

        jLabel3.setText("Odbiór danych z robota");

        responseDataButton.setText("Połącz");
        responseDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                responseDataButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Pobierz lokalizacje");

        localizationButton.setText("Pobierz");
        localizationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localizationButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Trasa");

        trackComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kwadratowa spirala", "Zygzak" }));

        trackButton.setText("Ustaw");

        jLabel6.setText("Test czujników:");

        testSensorButton.setText("Sprawdź");
        testSensorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testSensorButtonActionPerformed(evt);
            }
        });

        OnOffButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        OnOffButton.setText("START");
        OnOffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnOffButtonActionPerformed(evt);
            }
        });

        refreshPortsButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        refreshPortsButton.setText("Odświerz porty");
        refreshPortsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshPortsButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Wyloguj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGap(0, 73, Short.MAX_VALUE)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addGroup(controlPanelLayout.createSequentialGroup()
                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(controlPanelLayout.createSequentialGroup()
                                            .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(comPortComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(responseDataComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(localizationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jLabel5)
                                                .addComponent(trackComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel6)
                                                .addComponent(jLabel1))
                                            .addGap(56, 56, 56))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addGap(74, 74, 74)))
                                    .addComponent(OnOffButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(onCameraButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(comPortButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(responseDataButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(localizationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(trackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(testSensorButton, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)))))
                        .addGap(62, 62, 62))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                        .addComponent(refreshPortsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150))))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addComponent(refreshPortsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comPortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comPortButton))
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(responseDataButton)
                    .addComponent(responseDataComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(4, 4, 4)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(localizationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(localizationButton))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trackComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trackButton))
                .addGap(33, 33, 33)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(testSensorButton))
                .addGap(36, 36, 36)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onCameraButton)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OnOffButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("Panel Sterowania", controlPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onCameraButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCameraButtonActionPerformed
        Runtime runtime = Runtime.getRuntime();
        String cmd = "C:\\Users\\karro\\Desktop\\host_app\\ArduCAM_Host_V2.0_Windows\\ArduCAM_Host_V2.exe";
        
        try {
            runtime.exec(cmd);
        }
        catch (Exception ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_onCameraButtonActionPerformed

    private void refreshPortsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshPortsButtonActionPerformed
        for (int i = 0; i < portNames.length; i++) {
            this.comPortComboBox.addItem(portNames[i].getSystemPortName());
            this.responseDataComboBox.addItem(portNames[i].getSystemPortName());
            this.localizationComboBox.addItem(portNames[i].getSystemPortName());
        }
    }//GEN-LAST:event_refreshPortsButtonActionPerformed

    private void localizationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localizationButtonActionPerformed
        if (this.localizationButton.getText().equals("Pobierz")) {
            chosenPortLocalization = SerialPort.getCommPort(this.localizationComboBox.getSelectedItem().toString());
            if (chosenPortLocalization.openPort()) {
                String text = "";
                Scanner scanner = new Scanner(chosenPortLocalization.getInputStream());
                while (scanner.hasNext()) 
                {
                    text = text + "; " + scanner.nextLine();
                    System.out.println(text);
                }
               if (!text.equals(""))
                    JOptionPane.showMessageDialog(null, "Pozycja robota: " + text, "Lokalizacja", JOptionPane.INFORMATION_MESSAGE);
               text = "";
                scanner.close();
            }
            chosenPortLocalization.closePort();
        }
    }//GEN-LAST:event_localizationButtonActionPerformed

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        
        try {
            // register JDBC driver
            Class.forName(jdbc_driver);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }  
       
        try {
            // open connection to database
            Connection connection = DriverManager.getConnection(db_url, username, password);
            
            if (this.nameTextField.getText().equals("") && this.surnameTextField.getText().equals("") 
                    && this.loginTextField.getText().equals("") && this.passwordTextField.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Błąd danych. Sprawdź wprowadzone dane.", "UWAGA", JOptionPane.OK_CANCEL_OPTION);
            } 
            else {
                String sql = "INSERT INTO users (name, surname, login, password, role) VALUES" + "('" 
                        + this.nameTextField.getText() + "', '" + this.surnameTextField.getText() + "', '" + this.loginTextField.getText() +
                        "', '" + this.passwordTextField.getText() + "', '" + this.roleComboBox.getSelectedItem().toString() + "')";
                Statement statement = connection.createStatement();
                statement.executeUpdate(sql);
                table = (DefaultTableModel) this.jTable.getModel();
                table.addRow(new Object[]{this.nameTextField.getText(), this.surnameTextField.getText(), this.loginTextField.getText(),
                this.passwordTextField.getText(), this.roleComboBox.getSelectedItem().toString()});
                clear();
            }   
                
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_addUserButtonActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        table = (DefaultTableModel) this.jTable.getModel();
        
        this.nameTextField.setText(table.getValueAt(this.jTable.getSelectedRow(), 0).toString());
        this.surnameTextField.setText(table.getValueAt(this.jTable.getSelectedRow(), 1).toString());
        this.loginTextField.setText(table.getValueAt(this.jTable.getSelectedRow(), 2).toString());
        this.passwordTextField.setText(table.getValueAt(this.jTable.getSelectedRow(), 3).toString());
        this.roleComboBox.setSelectedItem(table.getValueAt(this.jTable.getSelectedRow(), 4).toString());
    }//GEN-LAST:event_jTableMouseClicked

    private void deleteUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserButtonActionPerformed
        try {
            // open connection to database
            Connection connection = DriverManager.getConnection(db_url, username, password);
            
            String sql = "DELETE FROM users WHERE login='" + this.loginTextField.getText() + "' AND password='" + this.passwordTextField.getText() + "'";
            Statement statement = connection.createStatement();
            statement.executeUpdate(sql);
            
            clear();
            
            sql = "SELECT name, surname, login, password, role FROM users";
            statement = connection.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            table = (DefaultTableModel) this.jTable.getModel();
            
            for (int i = 0; i < table.getRowCount(); i++)
                table.removeRow(i);
            
            while (rs.next()) {
                   table.addRow(new Object[]{rs.getString("name"), rs.getString("name"), rs.getString("login"),
                rs.getString("password"), rs.getString("role")}); 
            }  
        } catch (SQLException ex) {
            ex.printStackTrace();
        }       
    }//GEN-LAST:event_deleteUserButtonActionPerformed

    private void editUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserButtonActionPerformed
       table = (DefaultTableModel) this.jTable.getModel();
       table.setValueAt(this.nameTextField.getText(), this.jTable.getSelectedRow(), 0);
       table.setValueAt(this.surnameTextField.getText(), this.jTable.getSelectedRow(), 1);
       table.setValueAt(this.loginTextField.getText(), this.jTable.getSelectedRow(), 2);
       table.setValueAt(this.passwordTextField.getText(), this.jTable.getSelectedRow(), 3);
       table.setValueAt(this.roleComboBox.getSelectedItem().toString(), this.jTable.getSelectedRow(), 4);
       
       try {
            // open connection to database
            Connection connection = DriverManager.getConnection(db_url, username, password);
            
            if (this.nameTextField.getText().equals("") && this.surnameTextField.getText().equals("") 
                    && this.loginTextField.getText().equals("") && this.passwordTextField.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Błąd danych. Sprawdź wprowadzone dane.", "UWAGA", JOptionPane.OK_CANCEL_OPTION);
            } 
            else {
                PreparedStatement pstmt = connection.prepareStatement("UPDATE users SET name=?, surname=?, password=?, role=? WHERE login=?");
                pstmt.setString(1, this.nameTextField.getText());
                pstmt.setString(2, this.surnameTextField.getText());
                pstmt.setString(3, this.passwordTextField.getText());
                pstmt.setString(4, this.roleComboBox.getSelectedItem().toString());
                pstmt.setString(5, this.loginTextField.getText());
                
                pstmt.executeUpdate();
            }   
                
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_editUserButtonActionPerformed

    private void OnOffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OnOffButtonActionPerformed

        if (this.refreshPortsButton.equals("Rozłącz")) {
            this.refreshPortsButton.setText("Połącz");
        }
        try {
            // open connection to database
            Connection connection = DriverManager.getConnection(db_url, username, password);
            String sql = "SELECT * FROM ports";
            Statement statement = connection.createStatement();
            
            ResultSet rs = statement.executeQuery(sql);
            
            if (!rs.first()) {
                sql = "INSERT INTO ports (connectRobot, receiptData, localization, route) VALUES ('" +
                        this.comPortComboBox.getSelectedItem().toString() + "', '" + this.responseDataComboBox.getSelectedItem().toString() + "', '" +
                        this.localizationComboBox.getSelectedItem().toString() + "', '" + this.trackComboBox.getSelectedItem().toString() + "')";
                
                statement = connection.createStatement();
                statement.executeUpdate(sql);
            } else {
                PreparedStatement pstmt = connection.prepareStatement("UPDATE ports SET connectRobot=?, receiptData=?, localization=?, route=? WHERE id=1");
                pstmt.setString(1, this.comPortComboBox.getSelectedItem().toString());
                pstmt.setString(2, this.responseDataComboBox.getSelectedItem().toString());
                pstmt.setString(3, this.localizationComboBox.getSelectedItem().toString());
                pstmt.setString(4, this.trackComboBox.getSelectedItem().toString());
                
                pstmt.executeUpdate();
            }
            
                Arduino ardu = new Arduino();
                ardu.setPortDescription(this.comPortComboBox.getSelectedItem().toString());
                ardu.openConnection();
                
                if (turnOnRobot == false) {
                    if (this.trackComboBox.getSelectedItem().toString().equals("Kwadratowa spirala")) {
                        ardu.serialWrite("1");
                        turnOnRobot = true;
                        OnOffButton.setText("ZAKOŃCZ");
                        
                    }
                    else if (this.trackComboBox.getSelectedItem().toString().equals("Zygzak")) {
                        ardu.serialWrite("2");
                        turnOnRobot = true;
                        OnOffButton.setText("ZAKOŃCZ");
                    }
                } else if (turnOnRobot == true) {
                    ardu.serialWrite("0");
                    turnOnRobot = false;
                    OnOffButton.setText("START");
                }
                
                ardu.closeConnection();
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_OnOffButtonActionPerformed

    private void comPortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comPortButtonActionPerformed
       
        chosenPortRobot = SerialPort.getCommPort(this.comPortComboBox.getSelectedItem().toString());
        
    }//GEN-LAST:event_comPortButtonActionPerformed

    private void comPortComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comPortComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comPortComboBoxActionPerformed

    private void responseDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_responseDataButtonActionPerformed
  
        // nasłuch alarmu 
         
            chosenPortData = SerialPort.getCommPort(this.responseDataComboBox.getSelectedItem().toString());
            this.responseDataButton.setText("Rozłącz");
            for (int i = 0; i < 1000000; i++) {
                if (chosenPortData.openPort()) {
                    String text = "";
                    Scanner scanner = new Scanner(chosenPortData.getInputStream());
                    while (scanner.hasNext()) 
                    {
                        text = scanner.nextLine();
                        System.out.println(text );
                    }
                   if (text.equals("0")) {
                        JOptionPane.showMessageDialog(null, "Wykryto zagrożenie!", "Komunikat", JOptionPane.OK_CANCEL_OPTION);
                        break;
                   }
                    scanner.close();
                }
            }
            chosenPortData.closePort();
        
    }//GEN-LAST:event_responseDataButtonActionPerformed

    private void testSensorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testSensorButtonActionPerformed
        Arduino ardu = new Arduino();
        ardu.setPortDescription(this.responseDataComboBox.getSelectedItem().toString());
        ardu.openConnection();
        
        ardu.serialWrite("t");
        
        ardu.closeConnection();
        
        chosenPortData = SerialPort.getCommPort(this.responseDataComboBox.getSelectedItem().toString());
     
        String tmp = "";
        if (chosenPortData.openPort()) {
             Scanner scanner = new Scanner(chosenPortData.getInputStream());
                while (scanner.hasNext()) 
                {
                    tmp = scanner.nextLine();
                }
                
                if (tmp.equals("5"))
                    JOptionPane.showMessageDialog(null, "Czujniki podłączone", "Test czujników", JOptionPane.INFORMATION_MESSAGE);
                else if (tmp.equals("6"))
                    JOptionPane.showMessageDialog(null, "Czujniki niepodłączone!", "Test czujników", JOptionPane.ERROR_MESSAGE);
                scanner.close();
        }
        chosenPortData.closePort();
       
        
    }//GEN-LAST:event_testSensorButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MainWindow main = new MainWindow();
        main.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminWindow().setVisible(true);
            }
        });
        
    }
    
    private void clear() {
        this.nameTextField.setText("");
        this.surnameTextField.setText("");
        this.loginTextField.setText("");
        this.passwordTextField.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OnOffButton;
    private javax.swing.JButton addUserButton;
    private javax.swing.JButton comPortButton;
    private javax.swing.JComboBox<String> comPortComboBox;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JButton deleteUserButton;
    private javax.swing.JButton editUserButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JButton localizationButton;
    private javax.swing.JComboBox<String> localizationComboBox;
    private javax.swing.JTextField loginTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton onCameraButton;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JButton refreshPortsButton;
    private javax.swing.JButton responseDataButton;
    private javax.swing.JComboBox<String> responseDataComboBox;
    private javax.swing.JComboBox<String> roleComboBox;
    private javax.swing.JTextField surnameTextField;
    private javax.swing.JButton testSensorButton;
    private javax.swing.JButton trackButton;
    private javax.swing.JComboBox<String> trackComboBox;
    private javax.swing.JPanel userPanel;
    // End of variables declaration//GEN-END:variables

}
